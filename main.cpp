//
//  main.cpp
//  MathProblemGenerator
//  Generates Math problems and solutions for practicing math
//
//  Created by Kyle Jordan on 3/6/18.
//  Copyright Â© 2018 Kyle Jordan. All rights reserved.
//
#define TEST1 "test1.txt"
#define TEST2 "test2.txt"

#include "tools.hpp"
#include "NumberGenerator.hpp"
#include "Problem.hpp"
#include <fstream>
#include <string>

void numGenTest();
void problemUnitTest();

int main(int argc, const char * argv[]) {
    //banner();
    
    //numGenTest();
    problemUnitTest();
    
    bye();
}
//------------------------------------------------------------------------------
void
numGenTest(){
    ofstream fs;
    
    fs.open( TEST1, fstream::out | fstream::app );
    if( !fs.is_open() ) fatal( "Filestream could not be opened\n" );
    
    fs << "=================================================================\n";
    fs << "Starting NumberGenerator Class Unit Test: " << endl;
    NumberGenerator ng1( 2 );
    
    ng1.rng();
    
    ng1.combineDigits();
    
    ng1.print(fs);
    fs << endl;
    
    fs.close();
}
//------------------------------------------------------------------------------
//Problem constructor: create a problem from two numbers generated by
//NumberGenerator objects
//void rngsymbol()
//symbolEnum getSym(): returns sym enum variable value
//void calcsln: calculates sln
//double getsln()
//print(): prints out the problem
void
problemUnitTest(){
    ofstream fs;
    fs.open( TEST2, fstream::out | fstream::app );
    if( !fs.is_open() ) fatal( "Filestream could not be opened\n" );
    
    fs.fill('=');
    fs.width(80);
    fs << left << "=";
    fs << "\nStarting Problem Class Unit Test: " << endl;
    
    NumberGenerator ng1( 2 );
    NumberGenerator ng2( 2 );
    
    ng1.rng();
    ng1.combineDigits();
    ng2.rng();
    ng2.combineDigits();
    
    Problem p( ng1.getNumber(), ng2.getNumber() );
    p.rngSymbol();
    p.calcSln();
    
    p.print( fs );
    fs << endl;
    
    fs << "Solution: " << p.getSln() << endl;
    
    fs.close();
}
